--- drpm-0.3.0/src/drpm_make.c.orig	2016-05-09 16:20:20.000000000 +0200
+++ drpm-0.3.0/src/drpm_make.c	2018-05-12 22:40:19.794713274 +0200
@@ -33,8 +33,7 @@
 #include <openssl/md5.h>
 #include <openssl/sha.h>
 #include <rpm/rpmfi.h>
-#include <rpm/rpmvf.h>
-#include <rpm/rpmfc.h>
+#include <rpm/rpmcli.h>
 #include <linux/kdev_t.h>
 
 #define BUFFER_SIZE 4096
@@ -47,6 +46,12 @@
 
 #define MAGIC_RPML 0x52504D4C
 
+#ifndef RPMFC_ELF32
+#define RPMFC_ELF32 1
+#define RPMFC_ELF64 2
+#define RPMFC_ELFX32 4
+#endif
+
 #ifndef RPMFILE_UNPATCHED
 #define RPMFILE_UNPATCHED (1 << 10)
 #endif
@@ -406,10 +411,10 @@
             } else if (S_ISREG(file.mode)) {
                 skip = (c_filesize != file.size) ||
                        ((file.flags & (RPMFILE_CONFIG | RPMFILE_MISSINGOK | RPMFILE_GHOST)) != 0) ||
-                       ((file.verify & VERIFY_MD5) == 0 ||
+                       ((file.verify & VERIFY_FDIGEST) == 0 ||
                         (file.verify & VERIFY_SIZE) == 0) ||
                        (file_colors &&
-                        (file.color & (RPMFC_ELF32 | RPMFC_ELF64)) != 0 &&
+                        (file.color & (RPMFC_ELF32 | RPMFC_ELF64 | RPMFC_ELFX32)) != 0 &&
                         !IN_MULTILIB_DIR(name));
                 cpio_hdr.filesize = file.size;
             } else if (S_ISLNK(file.mode)) {
--- drpm-0.3.0/src/drpm_rpm.c.orig	2018-05-26 21:00:46.384303338 +0200
+++ drpm-0.3.0/src/drpm_rpm.c	2018-05-26 21:00:49.630969967 +0200
@@ -18,6 +18,7 @@
     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#define _DEFAULT_SOURCE /* for u_* types in db.h */
 #include "drpm.h"
 #include "drpm_private.h"
 
@@ -25,7 +26,8 @@
 #include <string.h>
 #include <limits.h>
 #include <fcntl.h>
-#include <rpm/rpmlib.h>
+#include <rpm/rpm46compat.h>
+#include <rpm/rpmio.h>
 #include <rpm/rpmts.h>
 #include <rpm/rpmdb.h>
 #include <openssl/md5.h>
@@ -54,7 +56,7 @@
 static void rpm_free(struct rpm *);
 static int rpm_export_header(struct rpm *, unsigned char **, size_t *);
 static int rpm_export_signature(struct rpm *, unsigned char **, size_t *);
-static void rpm_header_unload_region(struct rpm *, rpmTagVal);
+static void rpm_header_unload_region(struct rpm *, rpmTag);
 static int rpm_read_archive(struct rpm *, const char *, off_t, bool,
                             unsigned short *, MD5_CTX *, MD5_CTX *);
 
@@ -144,7 +146,7 @@
     return DRPM_ERR_OK;
 }
 
-void rpm_header_unload_region(struct rpm *rpmst, rpmTagVal rpmtag)
+void rpm_header_unload_region(struct rpm *rpmst, rpmTag rpmtag)
 {
     Header hdr;
     HeaderIterator hdr_iter;
